{"version":3,"sources":["components/Profile/profile.module.css","components/FriendList/FriendList.module.css","components/Statistics/statistics.module.css","components/TransactionHystory/TransactionHistory.module.css","components/FriendList/friendlistitem.js","components/FriendList/friendlist.js","components/Profile/profile.js","components/Statistics/statistics.js","components/TransactionHystory/TransactionHistory.js","App.js","index.js"],"names":["module","exports","FriendListItem","avatar","name","isOnline","className","s","item","status","style","backgroundColor","src","alt","width","FriendList","friends","friend_list","map","friend","id","Profile","props","tag","location","followers","views","likes","styles","profile","description","stats","label","quantity","Statistics","title","items","statistics","statlist","color","percentage","propTipes","PropTipes","arrayOf","shape","string","isRequired","TransactionHistory","transaction_history","type","amount","currency","App","user","transaction","ReactDOM","render","StrictMode","document","querySelector"],"mappings":"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","file":"static/js/main.634a0292.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"profile_profile__332fv\",\"avatar\":\"profile_avatar__1hBse\",\"description\":\"profile_description__3awtR\",\"stats\":\"profile_stats__1VKAN\",\"label\":\"profile_label__2KQFo\",\"name\":\"profile_name__IpeAM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"status\":\"FriendList_status__osTWe\",\"item\":\"FriendList_item__1FN7g\",\"friend_list\":\"FriendList_friend_list__2vYpX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"statistics_statistics__2dxXR\",\"statlist\":\"statistics_statlist__3jldU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transaction_history\":\"TransactionHistory_transaction_history__2h9Tq\"};","import PropTypes from \"prop-types\";\r\nimport s from \"./FriendList.module.css\";\r\nexport default function FriendListItem({avatar, name, isOnline}){\r\n    return (\r\n\r\n        <li className = {s.item}>\r\n        <span className = {s.status} style = {{backgroundColor : isOnline ? \"green\" : \"red\" }}></span>\r\n        <img src={avatar} alt={name} width=\"48\" />\r\n        <p>{name}</p>\r\n      </li>\r\n    )\r\n}\r\nFriendListItem.propTypes = {\r\n    name:PropTypes.string.isRequired,\r\n    avatar:PropTypes.string.isRequired,\r\n    isOnline:PropTypes.bool.isRequired,\r\n     };","import PropTypes from \"prop-types\";\r\nimport FriendListItem from \"./friendlistitem\";\r\nimport s from \"./FriendList.module.css\";\r\nexport default function FriendList({friends}){\r\nreturn(\r\n<ul className={s.friend_list}>\r\n {friends.map((friend) => (\r\n  <FriendListItem\r\navatar = {friend.avatar}\r\nname = {friend.name}\r\nisOnline  = {friend.isOnline}\r\nkey = {friend.id}\r\n\r\n  />\r\n )\r\n )\r\n }\r\n</ul>\r\n)\r\n}\r\n\r\nFriendList.propTypes = {\r\n  friends: PropTypes.arrayOf(PropTypes.shape({\r\n  name:PropTypes.string.isRequired,\r\n  avatar:PropTypes.string.isRequired,\r\n  isOnline:PropTypes.bool.isRequired,\r\n  id:PropTypes.number.isRequired\r\n}))}","import PropTypes from \"prop-types\";\r\nimport styles from \"./profile.module.css\";\r\nexport default function Profile(props){\r\n    const {name, tag, location, avatar, followers, views, likes } = props;\r\n    return (\r\n    <div className={styles.profile}>\r\n    <div className={styles.description}>\r\n      <img\r\n        src={avatar}\r\n        alt=\"Аватар пользователя\"\r\n        className={styles.avatar}\r\n      />\r\n      <p className={styles.name}>{name}</p>\r\n      <p className={styles.tag}>{tag}</p>\r\n      <p className={styles.location}>{location}</p>\r\n    </div>\r\n  \r\n    <ul className={styles.stats}>\r\n      <li>\r\n        <span className={styles.label}>Followers</span>\r\n        <span className={styles.quantity}>{followers}</span>\r\n      </li>\r\n      <li>\r\n        <span className={styles.label}>Views</span>\r\n        <span className={styles.quantity}>{views}</span>\r\n      </li>\r\n      <li>\r\n        <span className={styles.label}>Likes</span>\r\n        <span className={styles.quantity}>{likes}</span>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n    )\r\n  };\r\n\r\n  Profile.propTypes = {\r\n      name:PropTypes.string.isRequired,\r\n      avatar:PropTypes.string.isRequired,\r\n      tag:PropTypes.string.isRequired,\r\n      location:PropTypes.string.isRequired,\r\n      followers:PropTypes.number.isRequired,\r\n      views:PropTypes.number.isRequired,\r\n      likes:PropTypes.number.isRequired\r\n  }","import PropTipes from \"prop-types\";\r\nimport s from \"./statistics.module.css\"\r\nexport default function Statistics ({title, items}) {\r\n    return (\r\n    <section className={s.statistics}>\r\n  {title && <h2 className=\"title\">{title}</h2>}\r\n  <ul className= {s.statlist}>\r\n  {items.map((item) => (\r\n          <li style = {{backgroundColor: item.color}} key={item.id}>\r\n            <span className=\"label\">{item.label}</span>\r\n            <span className=\"percentage\">{item.percentage}</span>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </section>\r\n  );\r\n}\r\n\r\n\r\n\r\nStatistics.propTipes = {\r\n    items: PropTipes.arrayOf(\r\n        PropTipes.shape(\r\n            {id: PropTipes.string.isRequired,\r\n             label: PropTipes.string.isRequired,\r\n             percentage: PropTipes.string.isRequired,   \r\n            }\r\n        )\r\n    )\r\n}","import PropTypes from \"prop-types\";\r\nimport s from \"./TransactionHistory.module.css\"\r\nexport default function TransactionHistory({items}){\r\n    return(\r\n<table className={s.transaction_history}>\r\n  <thead>\r\n    <tr>\r\n      <th>Type</th>\r\n      <th>Amount</th>\r\n      <th>Currency</th>\r\n    </tr>\r\n  </thead>\r\n\r\n  <tbody>{\r\n      items.map((item) => ( <tr key = {item.id}>\r\n        <td>{item.type}</td>\r\n        <td>{item.amount}</td>\r\n        <td>{item.currency}</td>\r\n      </tr>))}\r\n       </tbody>\r\n</table>\r\n    )\r\n}\r\nTransactionHistory.propTypes = {\r\n  items: PropTypes.arrayOf(PropTypes.shape({\r\n    type: PropTypes.string.isRequired,\r\n    amount: PropTypes.string.isRequired,\r\n    currency: PropTypes.string.isRequired,\r\n    id: PropTypes.string.isRequired,\r\n  })),\r\n};","import FriendList from \"./components/FriendList/friendlist\";\nimport transaction from \"./components/TransactionHystory/TransactionHistory.json\"\nimport friends from \"./components/FriendList/friends.json\";\nimport Profile from \"./components/Profile/profile\";\nimport Statistics from \"./components/Statistics/statistics\";\nimport user from \"./components/Profile/profile.json\";\nimport statistics from \"./components/Statistics/statistics.json\";\nimport TransactionHistory from \"./components/TransactionHystory/TransactionHistory\";\n\n\nexport default function App(){\n  return (<div><Profile \n    avatar ={user.avatar} \n    name ={user.name} \n    tag={user.tag} \n    location = {user.location} \n    followers = {user.stats.followers}\n    views = {user.stats.views} \n    likes = {user.stats.likes}\n/>\n<Statistics title=\"Upload stats\" items={statistics} />\n<FriendList friends = {friends} />\n<TransactionHistory items = {transaction} />\n  </div>);\n}\n ","import React from 'react';\n//import ReactDOM from 'react-dom';\nimport './index.css';\n//import App from './App';\n//import reportWebVitals from './reportWebVitals';\n\n//ReactDOM.render(\n//  <React.StrictMode>\n//    <App />\n//  </React.StrictMode>,\n//  document.getElementById('root')\n//);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n\n\nimport ReactDOM from 'react-dom';\n\nimport App from \"./App\";\n\n\n\n\n//avatar ={user.avatar} \n // name ={user.name} \n // tag={user.tag} \n // location = {user.location} \n // followers = {user.stats.followers}\n//  views = {user.stats.views} \n//  likes = {user.stats.likes}\n\nReactDOM.render(<React.StrictMode> <App /> </React.StrictMode>, document.querySelector(\"#root\"),);\n\n\n\n"],"sourceRoot":""}